{"version":3,"sources":["components/Layout/Layout.css","components/Fetchdata/Fetchdata.css","App.css","components/NoteBox/NoteBox.js","components/Messages/Messages.js","components/Fetchdata/Fetchdata.js","components/Displaynote/Displaynote.js","components/Displaycategory/Editdata.js","components/Searchnote/Searchnote.js","components/Displaycategory/ComputerScience/ComputerScience.js","components/Displaycategory/Maths/Maths.js","components/Displaycategory/History/History.js","components/Displaycategory/Displaycategory.js","components/Layout/Layout.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","header","container","column1","column2","column3","footer","design","App","App-logo","App-logo-spin","App-header","App-link","NoteBox","state","message","note","category","validate","storeMessage","console","log","_this","setState","Object","objectSpread","username","postHandler","axios","post","then","response","data","_this2","this","react_default","a","createElement","placeholder","onChange","event","target","value","type","onClick","Component","Messages","props","clicked","Fetchdata","messageDetails","userId","messageDetailsFromStore","updateHandler","arr","componentDidMount","deleteHandler","index","messages","toConsumableArray","splice","get","_this3","className","classes","sendDataToStore","map","components_Messages_Messages","key","connect","fetchedData","dispatch","Displaynote","components_Fetchdata_Fetchdata","Editdata","Searchnote","smessage","output","Displaycategory_Editdata","ComputerScience","Maths","History","DisplayCategory","react_router_dom","to","react_router","path","exact","component","Layout","components_NoteBox_NoteBox","components_Searchnote_Searchnote","Displaycategory","components_Displaynote_Displaynote","components_Layout_Layout","Boolean","window","location","hostname","match","initialState","reducer","arguments","length","undefined","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reduxstore","createStore","applyMiddleware","store","next","result","getState","reduxThunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ce18a8c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Layout__header__3vmdE\",\"container\":\"Layout__container__1g5KG\",\"column1\":\"Layout__column1__23LJo\",\"column2\":\"Layout__column2__1qoQS\",\"column3\":\"Layout__column3__15J_G\",\"footer\":\"Layout__footer__3_18f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"design\":\"Fetchdata__design__pjne-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\",\"App-logo\":\"App__App-logo__3JCPt\",\"App-logo-spin\":\"App__App-logo-spin__RvI1J\",\"App-header\":\"App__App-header__3iH8L\",\"App-link\":\"App__App-link__13fTZ\"};","import React,{Component} from 'react';\r\nimport  '../NoteBox/NoteBox.css';\r\n\r\nimport axios from 'axios';\r\n\r\nclass NoteBox extends Component{\r\n    state={\r\n        message:{\r\n        note:'',\r\n        category:'CAT1'\r\n    },\r\n        validate:true\r\n    }\r\n\r\n   \r\n    storeMessage=()=>{\r\n        console.log(\"clicked\");\r\n        if(this.state.note!==''){\r\n            \r\n            this.setState({\r\n                ...this.state.message,\r\n                validate:false\r\n            });\r\n            \r\n        }\r\n        console.log(this.state.username);\r\n\r\n    }\r\n\r\n    postHandler=()=>{\r\n        \r\n        axios.post('http://3.8.210.185:8080/message',{message:this.state.note,category:this.state.category})\r\n        .then(response=>{\r\n            this.setState({\r\n                ...this.state,\r\n                note:response.data.message,\r\n                category:response.data.category,\r\n            });\r\n        });\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Please add note in below box</h3>\r\n                <textarea placeholder=\"Please enter your note\"\r\n                onChange={event=>this.setState({note:event.target.value})}/>\r\n                <div>\r\n                <input type=\"text\" value={this.state.value}\r\n                 onChange={event=>this.setState({category:event.target.value})}>\r\n                  \r\n                </input>\r\n                </div>\r\n                <div>\r\n                \r\n                </div>\r\n                \r\n                <button type=\"submit\" value=\"Submit\" onClick={this.postHandler}>Submit</button>\r\n                {this.state.category}               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoteBox;","import React from 'react';\r\nconst Messages=(props)=>{\r\n    return(\r\n       <div>\r\n    \r\n    <p onClick={props.clicked}>{props.message} falls in category {props.category} </p></div>\r\n    )\r\n}\r\nexport default Messages;","import React,{Component} from 'react';\r\nimport axios from 'axios';\r\nimport {connect } from 'react-redux';\r\nimport classes from '../Fetchdata/Fetchdata.css';\r\nimport Messages from '../Messages/Messages';\r\n\r\nclass Fetchdata extends Component{\r\n   state={\r\n       messageDetails:[{category: \"History\", userId: 3, message: \"Geography\"}],\r\n       messageDetailsFromStore:[{category: \"History2\", userId: 3, message: \"Geography\"}]\r\n   }\r\n    componentDidMount(){\r\n\r\n        axios.get(\"http://3.8.210.185:8080/messages\").then(response=>{\r\n            this.setState({\r\n                ...this.state.messageDetails,\r\n                messageDetails:response.data\r\n            });\r\n            console.log(response);\r\n        });\r\n        \r\n    }\r\n    updateHandler=()=>{\r\n     //   this.props.deleteMessageFromStore(index)\r\n        this.setState({\r\n            ...this.state.messageDetailsFromStore,\r\n            messageDetailsFromStore:this.props.arr\r\n            \r\n        });\r\n\r\n        this.componentDidMount();\r\n       // console.log(\"alert\");\r\n    }\r\n    deleteHandler=(index)=>{\r\n        const messages=[...this.state.messageDetailsFromStore];\r\n        messages.splice(index,1);\r\n        this.setState({\r\n            ...this.state.messageDetailsFromStore,\r\n            messageDetailsFromStore:messages\r\n            \r\n        });\r\n     // this.props.deleteMessageFromStore(this.state.messageDetailsFromStore);\r\n    }\r\n    \r\n    \r\n    render(){\r\n       \r\n       \r\n    //    const messages=this.props.arr.map((message,index)=>{\r\n        \r\n    //     return <Messages key={message.userId} message={message.message} category={message.category} onClick={this.deleteHandler(index)} />\r\n    // // });\r\n    // const messages=this.state.messageDetailsFromStore.map((message)=>{\r\n    //     return <Messages key={message.userId} message={message.message} category={message.category} />\r\n    // });\r\n        return(\r\n            <div>\r\n                \r\n                <button className={classes.design} onClick={()=>\r\n                        this.props.sendDataToStore(this.state.messageDetails) }\r\n                        >Send Messages to store</button>\r\n                <button className={classes.design} onClick=\r\n                    {this.updateHandler}\r\n                >UpdateState</button>\r\n             \r\n            \r\n               <div>\r\n                        {this.state.messageDetailsFromStore.map((message,index)=>{\r\n                                return( <Messages key={message.userId} message={message.message} category={message.category} clicked={this.deleteHandler}/>);\r\n                        })}\r\n               </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        arr:state.fetchedData\r\n    };\r\n}\r\nconst DispatchToProps = dispatch=>{\r\n    return{\r\n    sendDataToStore:(messageDetails)=>dispatch({type:'FETCH', messageDetails:messageDetails}),\r\n    //deleteMessageFromStore:(messageDetails)=>dispatch({type:'UPDATE', userId:messageDetails})\r\n   \r\n}\r\n}\r\n\r\nexport default connect(mapStateToProps,DispatchToProps)(Fetchdata);","import React,{Component} from 'react';\r\n\r\n//import Messages from '../Messages/Messages';\r\nimport Fetchdata from '../Fetchdata/Fetchdata';\r\n\r\nclass Displaynote extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                Displaynote\r\n                <Fetchdata/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Displaynote;","import React from 'react';\r\nconst Editdata=(props)=>{\r\n    return(\r\n        <div>\r\n            <p>{props.message}  falls under category {props.category}</p>\r\n            </div>\r\n    );\r\n}\r\nexport default Editdata;","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Editdata from '../Displaycategory/Editdata';\r\n//import classes from '../Searchnote/Searchnote.css';\r\nclass Searchnote extends Component{\r\nstate={\r\n    smessage:''\r\n}\r\n    render(){\r\n        let output=null;\r\n        if(this.props.arr){\r\n    output=this.props.arr.map(message=>{\r\n        if(message.message===this.state.smessage){\r\n            return <Editdata \r\n             \r\n            key={message.userId} message={message.message} category={message.category} \r\n            />\r\n        }\r\n        else{\r\n           return null\r\n        }\r\n    })\r\n}\r\n        return(\r\n            <div>\r\n                <h3>Enter the text to search</h3>\r\n                <textarea placeholder=\"Search..\" \r\n                onChange={event=>this.setState({smessage:event.target.value})}/>\r\n                <div>\r\n  <button type=\"submit\">Click</button>\r\n  </div>{output}\r\n  \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        arr:state.fetchedData\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Searchnote);","import React,{Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Editdata from '../Editdata';\r\n\r\nclass ComputerScience extends Component{\r\n   \r\n    \r\n\r\n    render(){\r\n         const messages=this.props.arr.map(message=>{\r\n            \r\n             if(message.category==='Computer Science'){\r\n             return <Editdata \r\n             \r\n             key={message.userId} message={message.message} category={message.category} \r\n             />\r\n         }else{\r\n             return null\r\n         }\r\n        });\r\n        return(\r\n            <div>\r\n                {messages}\r\n              </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        arr:state.fetchedData\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ComputerScience);","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Messages from '../../Messages/Messages';\r\nclass Maths extends Component{\r\n    render(){\r\n        const messages=this.props.arr.map(message=>{\r\n            if(message.category==='Mathematices'){\r\n            return <Messages key={message.userId} message={message.message} category={message.category}/>\r\n        }else{\r\n            return null\r\n        }\r\n        });\r\n        return(\r\n            <div>{messages}</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        arr:state.fetchedData\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Maths);\r\n","import React,{Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Messages from '../../Messages/Messages';\r\nclass History extends Component{\r\n    render(){\r\n        const messages=this.props.arr.map(message=>{\r\n            \r\n            if(message.category==='History'){\r\n            return <Messages key={message.userId} message={message.message} category={message.category}/>\r\n        }else{\r\n            return null\r\n        }\r\n        });\r\n        return(\r\n            <div>{messages}</div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        arr:state.fetchedData\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(History);","import React,{Component} from 'react';\r\nimport {Route,Link} from 'react-router-dom';\r\n\r\nimport ComputerScience from '../Displaycategory/ComputerScience/ComputerScience';\r\nimport Maths from '../Displaycategory/Maths/Maths';\r\nimport History from '../Displaycategory/History/History';\r\nclass DisplayCategory extends Component{\r\n    render(){\r\n        return(\r\n            \r\n            <div>\r\n                <ul>\r\n                    <li><Link to=\"/cs\">Computer Science</Link></li>\r\n                    <li><Link to=\"/maths\">Maths</Link></li>\r\n                    <li><Link to=\"/his\">History</Link></li>\r\n                </ul>\r\n                <div>\r\n             <Route path=\"/cs\"  exact component={ComputerScience}/>\r\n             <Route path=\"/maths\"  exact component={Maths}/>\r\n             <Route path=\"/his\"  exact component={History}/>\r\n             </div>\r\n                        </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default DisplayCategory;","import React,{Component} from 'react';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nimport classes from '../Layout/Layout.css';\r\n\r\n\r\nimport NoteBox from '../NoteBox/NoteBox';\r\nimport Displaynote from '../Displaynote/Displaynote';\r\nimport Searchnote from '../Searchnote/Searchnote';\r\nimport DisplayCategory from '../Displaycategory/Displaycategory';\r\n\r\n//import Fetchdata from '../Fetchdata/Fetchdata';\r\n//import Notelist from '../Notelist/Notelist';\r\nclass Layout extends Component{\r\n    render(){\r\n        return(\r\n            \r\n            <div>\r\n            <div className={classes.header}>\r\n                NoteApp\r\n            </div>\r\n            <div className={classes.container}>\r\n            \r\n            <div className={classes.column1}>\r\n            <div>\r\n                <NoteBox/>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <Searchnote/>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n            <BrowserRouter>\r\n            <div className={classes.column2}>\r\n            \r\n            <DisplayCategory></DisplayCategory>\r\n            \r\n            </div>\r\n            </BrowserRouter>\r\n            <div className={classes.column3}>\r\n            <Displaynote/>\r\n            </div>\r\n            </div>\r\n           \r\n            <div className={classes.footer}>\r\n                footer\r\n            </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default Layout;","import React from 'react';\n\nimport './App.css';\n\nimport Layout from './components/Layout/Layout';\n\n \nfunction App() {\n  return (\n    \n    <div>\n    <Layout/>\n  </div>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState={\r\nfetchedData:[{category: \"Mathematices\", userId: 2, message: \"Statistics\"}]\r\n\r\n}\r\n\r\nconst reducer = (state=initialState,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'FETCH':\r\n            return {\r\n                ...state,\r\n                fetchedData:action.messageDetails\r\n            }\r\n            case 'UPDATE':\r\n               \r\n            return {\r\n                ...state,\r\n                fetchedData:action.userId\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport reducer from './store/reducer';\nimport {Provider} from 'react-redux';\n\nimport reduxThunk from 'redux-thunk';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n    }\n};\nconst reduxstore=createStore(reducer,{},composeEnhancers(applyMiddleware(logger,reduxThunk)));\n//const reduxstore=createStore(reducer);\nReactDOM.render(<Provider store={reduxstore}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}